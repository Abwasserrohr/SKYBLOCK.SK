#
# ==============
# menues.sk
# ==============
# menues.sk is part of the SKYBLOCK.SK functions.
# ==============

#
# > Function: skyblockgui
# > Parameter: <player>player
# > Actions:
# > Opens the main menu for SkyBlock, this function is called if a player enters /island.
function skyblockgui(p: player):
  #
  # > Open a new gui to the player, named SkyBlock with 27 slots.
  # > Custom syntax is used once it works better without custom reload.
  #open new gui menu named "&lSkyBlock" to {_p} with 36 slots
  opengui({_p},36,"&lSkyBlock")
  #
  # > Fill the Inventory with empty glass panes.
  loop 36 times:
    set slot loop-number - 1 of {_p}'s current inventory to black stained glass pane named " "
    protectslot({_p},loop-number - 1)
  #
  # > Set frequently used data into local variables.
  set {_uuid} to uuid of {_p}
  set {_lang} to getlangcode({_p})
  #
  # > Set the items into the menu.
  if {SB::player::%{_uuid}%::island::bedrock} is set:
    setguiitem({_p},10,grass,1,getlang("guigrassname",{_lang}),getlang("maingui_guigrasslore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is home""",true)
  else:
    setguiitem({_p},10,grass,1,getlang("guigrassname",{_lang}),getlang("maingui_guigrasscreatelore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is create""",true)
  set {_customgui} to getcustomhead(getlang("language",{_lang}),getlang("languageskin",{_lang}))
  setguiitem({_p},11,experience bottle,1,getlang("guiexpname",{_lang}),getlang("maingui_guiislandinfo",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is info %{_p}%""",true)
  set {_bnq} to book and quill
  setguiitem({_p},12,{_bnq},1,getlang("guichallangename",{_lang}),getlang("maingui_guichallangelore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is c""",true)
  setguiitem({_p},13,floor sign,1,getlang("guitopname",{_lang}),getlang("maingui_guitoplore",{_lang}),"islandtoplist(""%{_p}%"" parsed as player,""1"",true)",false)
  setguiitem({_p},14,ender chest,1,getlang("guirewardsname",{_lang}),getlang("maingui_guirewardslore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/openloot""",true)
  setguiitem({_p},15,end portal frame,1,getlang("guihubname",{_lang}),getlang("maingui_guihublore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is spawn""",true)
  setguiitem({_p},16,jungle leaves,1,getlang("bc_changebiomeheader",{_lang}),getlang("bc_changebiomemenulore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is biome""",true)
  setguiitem({_p},19,{_customgui},1,getlang("languages",{_lang}),getlang("maingui_guilanglore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is lang""",true)
  setguiitem({_p},20,lever,1,getlang("flag_flagst",{_lang}),getlang("maingui_guiflaglore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is flags""",true)
  setguiitem({_p},21,hopper,1,getlang("bc_islandupgrades",{_lang}),getlang("maingui_islandupgradelore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is upgrades""",true)
  setguiitem({_p},22,gold ingot,1,getlang("store_guititle",{_lang}),getlang("maingui_storelore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/store""",true)
#
# > Function - biomemenu:
# > Arguments:
# > <player>player
# > Actions:
# > Opens the biome menu to the player where it is possible to get biomes for a fixed, predefined price,
# > define biomes and prices in the config.sk or alter this function like you want.
function biomemenu(p: player):
  #
  # > Get the uuid of the player.
  set {_uuid} to uuid of {_p}
  #
  # > Get the uuid of the island leader and check if the player is the leader.
  set {_leader} to getleader({_p})
  set {_lang} to getlangcode({_p})
  if {_leader} is {_uuid}:
    #
    # > Count how many lines are needed:
    set {_size} to size of {SB::config::biome::menuitem::*}
    set {_slots} to 9
    loop 5 times:
      if {_size} is bigger than {_slots}-3:
        add 9 to {_slots}
    #
    # > Give the gui some more room by adding two rows, if possible.
    if {_slots} is not 54 or 45:
      add 18 to {_slots}
    #
    # > Open a menu to the defined player, with the calculated slots and the translated menu header
    opengui({_p},{_slots},getlang("bc_changebiomeheader",{_lang}))
    #
    # > Fill the inventory with empty glass panes to make it look nicer
    loop {_slots} times:
      set slot loop-number - 1 of {_p}'s current inventory to black stained glass pane named " "
      protectslot({_p},loop-number - 1)
    #
    # > Render all the biomes into the menu, they can be changed in the config.sk
    set {_slot} to 10
    loop {SB::config::biome::menuitem::*}:
      set {_item} to {SB::config::biome::menuitem::%loop-index%}
      set {_price} to {SB::config::biome::price::%loop-index%}
      set {_title} to {SB::config::biome::lang::%{_lang}%::%loop-index%}
      set {_biome} to {SB::config::biome::biomename::%loop-index%}
      #
      # > If the price is over 0, set the price in lore to a price
      if {_price} is bigger than 0:
        set {_pricelore} to getlang("bc_shopprice",{_lang})
        replace all "<price>" with "%{_price}%" in {_pricelore}
      # > If the price is 0 or lower, tell the player that it is free.
      else:
        set {_pricelore} to getlang("bc_shopfree",{_lang})
      setguiitem({_p},{_slot},{_item},1,"&r%{_title}%","&r%{_pricelore}%","buybiomechange(""%{_p}%"" parsed as player,""%{_biome}%"",%{_price}%,""%{_title}%"")",true)
      add 1 to {_slot}
      add 1 to {_loopamount}
      if {_loopamount} is 7:
        set {_loopamount} to 0
        add 3 to {_slot}
    #
    # > Add back item to allow the player to go back to the previous menu.
    set {_slots} to {_slots} - 1
    setguiitem({_p},{_slots},{SB::config::backguiitem},1,getlang("guibacktopreviousmenu",{_lang}),getlang("guibacktopreviousmenulore",{_lang}),"make ""%{_p}%"" parsed as player execute command ""/is""",true)
  #
  # > If the player is not the owner, tell the player that this is for the island owner only
  else:
    set {_prefix} to getlang("prefix",{_lang})
    set {_msg} to getlang("notleader",{_lang})
    send "%{_prefix}% %{_msg}%" to {_p}
