#
# ==============
# islandtoplist.sk
# ==============
# islandtoplist.sk is part of the SKYBLOCK.SK functions.
# ==============

# > Function - islandtoplist:
# > Arguments:
# > <player>player, <text>pageint
# > Actions:
# > The islandtoplist sends a toplist into the chat of the player.
function islandtoplist(p:player,pageint:text):
  #
  # > Save some variables to local variables.
  set {_pageint} to "%{_pageint}%" parsed as integer
  set {_playeruuid} to uuid of {_p}
  set {_lang} to {SK::lang::%{_playeruuid}%}
  set {_prefix} to {SB::lang::prefix::%{_lang}%}
  #
  # > If the page is not set, send the player a error and stop here.
  if {_pageint} is not set:
    message "%{_prefix}% %{SB::lang::notanumber::%{_lang}%}%" to {_p}
    stop
  #
  # > Get the bedrock location to format it into the same format as levels are saved to be
  # > later able to check if the loop-value is the same as the island of the player.
  set {_pbedrock} to {SB::player::%{_playeruuid}%::island::bedrock}
  set {_pbedrock} to "%x-coord of {_pbedrock}%_%y-coord of {_pbedrock}%_%z-coord of {_pbedrock}%"
  #
  # > If there is no island level set, there is basically no island there to display.
  if {SB::islvl::*} is not set:
    message "%{_prefix}% %{SB::lang::nois::%{_lang}%}%" to {_p}
    stop
  #
  # > Loop through all island levels.
  loop {SB::islvl::*}:
    #
    # > If there is already a level set for this island, delete the list entry.
    if {_level::%loop-index%} is set:
      delete {SB::islvl::%loop-index%}
    #
    # > Set the entries to a new list to sort it, do not mess with the list saved on disk.
    set {_level::%loop-index%} to loop-value
  #
  # > Revert the list from random to low to high. {_l2h::*} -> l2h means low to high.
  loop {_level::*}:
    add 1 to {_size}
    if {_l2h::%loop-value%} is not set:
      set {_l2h::%loop-value%} to loop-index
    else:
      set {_n} to 0
      loop {_size} times:
        set {_n} to {_n}+1
        if {_l2h::%loop-value-1%.%{_n}%} is not set:
          set {_l2h::%loop-value-1%.%{_n}%} to loop-index
          stop loop
  #
  # > Reverts low to high to high to low list to get a toplist.
  loop {_l2h::*}:
    set {_h2l::%{_n}%} to loop-value
    set {_n} to {_n}-1
  set {_page} to 1
  #
  # > Go trough the new high to low list and create a toplist.
  loop {_h2l::*}:
    add 1 to {_pageentries}
	#
	# > 
    add 1 to {_rank}
    set {_top::%{_page}%::%{_rank}%} to loop-value
	#
	# > If the current loop value is the same as the bedrock string of the player, set it to the current rank of the player.
    if loop-value is {_pbedrock}:
      #
      # > {_pRank} is the player rank.
      set {_pRank} to {_rank}
    if {_pageentries} is 10:
      set {_pageentries} to 0
      add 1 to {_page}
  #
  # > If the page is not set in the top list, send a error and stop.
  if {_top::%{_pageint}%::*} is not set:
    set {_msg} to {SB::lang::pagenotfound::%{_lang}%}
    replace all "<pages>" with "%{_page}%" in {_msg}
    message "%{_prefix}% %{_msg}%" to {_p}
    stop
  message "%{SB::config::spacer}%" to {_p}
  #
  # > Get the translation of the header and replace placeholders, then send it to the player.
  set {_msg} to {SB::lang::istopheader::%{_lang}%}
  replace all "<currentpage>" with "%{_pageint}%" in {_msg}
  replace all "<allpages>" with "%{_page}%" in {_msg}
  message "%{_prefix}% %{_msg}%" to {_p}
  #
  # > Loop through the toplist site, the player has requested.
  loop {_top::%{_pageint}%::*}:
    set {_member} to ""
    set {_loc} to "%loop-value%"
	#
	# > Get the members of an island, if there are any of them.
    loop {SB::island::%loop-value%::member::*}:
      set {_tp} to "%loop-value-2%" parsed as offline player
      if {_member} is "":
        set {_member} to "%{_tp}%"
      else:
        set {_member} to "%{_member}%, %{_tp}%"
    set {_lp} to "%{SB::island::%loop-value%::leader}%" parsed as offline player
    #
    # > Get translated toplist and replace all placeholders to send it to the player.
    set {_msg} to {SB::lang::istoplist::%{_lang}%}
    replace all "<rank>" with loop-index in {_msg}
    replace all "<leader>" with "%{_lp}%" in {_msg}
    replace all "<points>" with "%{_level::%loop-value%}%" in {_msg}
    replace all "<members>" with "%{_member}%" in {_msg}
    message "%{_prefix}% %{_msg}%" to {_p}
  #
  # > If the rank is set, replace the translation placeholder and send it to the player.
  if {_pRank} is set:
    set {_msg} to {SB::lang::istoprankinfo::%{_lang}%}
    replace all "<rank>" with "%{_pRank}%" in {_msg}
    replace all "<islands>" with "%{_size}%" in {_msg}
    message "%{_prefix}% %{_msg}%" to {_p}
  message "%{SB::config::spacer}%" to {_p}
