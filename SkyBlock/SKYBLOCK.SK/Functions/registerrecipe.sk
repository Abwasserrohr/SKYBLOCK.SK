#
# ==============
# registerrecipe.sk
# ==============
# registerrecipe.sk is part of the SKYBLOCK.SK functions.
# ==============

import:
  org.bukkit.Material
  org.bukkit.inventory.ItemStack
  org.bukkit.inventory.ShapedRecipe
  org.bukkit.inventory.ShapelessRecipe
  org.bukkit.Bukkit
  org.bukkit.NamespacedKey

#
# > Function - addShapedRecipe:
# > Parameters:
# > <item> result item
# > <item> ingredient 1
# > <item> ingredient 2
# > <item> ingredient 3
# > <item> ingredient 4
# > <item> ingredient 5
# > <item> ingredient 6
# > <item> ingredient 7
# > <item> ingredient 8
# > <item> ingredient 9
# > Actions:
# > Creates a shaped recipe, which can be used by players.
# > The shape is set up like this:
# > 1 | 2 | 3
# > 4 | 5 | 6
# > 7 | 8 | 9
# > If a ingredient should be left empty, use air.
function addShapedRecipe(result:item,i1:item=air,i2:item=air,i3:item=air,i4:item=air,i5:item=air,i6:item=air,i7:item=air,i8:item=air,i9:item=air):
  #
  # Create a new shaped recipe of the result item with the NameSpacedKey of Skript with the key "registerrecipe".
  set {_key} to "%{_result}.getType()%-%{_i1}.getType()%-%{_i2}.getType()%-%{_i3}.getType()%-%{_i4}.getType()%-%{_i5}.getType()%-%{_i6}.getType()%-%{_i7}.getType()%-%{_i8}.getType()%-%{_i9}.getType()%"
  replace all " " with "" in {_key}
  set {_namespacedKey} to new NamespacedKey(Bukkit.getServer().getPluginManager().getPlugin("Skript"), "registerrecipe-%{_key}%")
  set {_recipe} to new ShapedRecipe({_namespacedKey}, 1 of {_result})
  #
  # > Create a shape for the recipe.
  {_recipe}.shape("123","456","789")
  #
  # > Loop through all ingredients and add them.
  loop 9 times:
    {_recipe}.setIngredient("%loop-number%", {_i%loop-number%}.getType())
  #
  # > Add the recipe. This a exception will happen if the recipe is added multiple times,
  # > it will not overwrite the recipe, restart if necessary.
  Bukkit.addRecipe({_recipe})

#
# > Function - addShapelessRecipe:
# > Parameters:
# > <item> result item
# > <item> ingredient 1
# > <item> ingredient 2
# > <item> ingredient 3
# > <item> ingredient 4
# > <item> ingredient 5
# > <item> ingredient 6
# > <item> ingredient 7
# > <item> ingredient 8
# > <item> ingredient 9
# > Actions:
# > Creates a shapedless recipe, which can be used by players.
function addShapelessRecipe(result:item,i1:item=air,i2:item=air,i3:item=air,i4:item=air,i5:item=air,i6:item=air,i7:item=air,i8:item=air,i9:item=air):
  #
  # Create a new shapedless recipe of the result item with the NameSpacedKey of Skript with the key "registerrecipe".
  set {_key} to "%{_result}.getType()%-%{_i1}.getType()%-%{_i2}.getType()%-%{_i3}.getType()%-%{_i4}.getType()%-%{_i5}.getType()%-%{_i6}.getType()%-%{_i7}.getType()%-%{_i8}.getType()%-%{_i9}.getType()%"
  replace all " " with "" in {_key}
  set {_namespacedKey} to new NamespacedKey(Bukkit.getServer().getPluginManager().getPlugin("Skript"), "registerrecipe-%{_key}%")
  set {_recipe} to new ShapelessRecipe({_namespacedKey}, 1 of {_result})
  #
  # > Loop through all ingredients and add them to the recipe.
  loop 9 times:
    if {_i%loop-number%} is not air:
      {_recipe}.addIngredient({_i%loop-number%}.getAmount(), {_i%loop-number%}.getType())
  #
  # > Add the recipe. This a exception will happen if the recipe is added multiple times,
  # > it will not overwrite the recipe, restart if necessary.
  Bukkit.addRecipe({_recipe})
