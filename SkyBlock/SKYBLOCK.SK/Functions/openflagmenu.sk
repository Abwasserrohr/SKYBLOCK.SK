#
# ==============
# openflagmenu.sk
# ==============
# openflagmenu.sk is part of the SKYBLOCK.SK functions.
# ==============

# > Function - openflagmenu:
# > Arguments:
# > <player>player
# > Actions:
# > Opens the flags for the player to change, if enabled in config.sk
function openflagmenu(p:player):
	#
	# > Get the uuid of the player and set it to a local variable.
	set {_uuid} to uuid of {_p}

	#
	# > Get the language of the player in a local variable.
	set {_lang} to {SK::lang::%{_uuid}%}

	#
	# > Set the prefix for messages into the local variable {_prefix}.
	set {_prefix} to {SB::lang::prefix::%{_lang}%}

	#
	# > Get the bedrock of the player who executed the command.
	set {_bedrock} to {SB::player::%{_uuid}%::island::bedrock}
	#
	# > Get the x, y and z-coordinates of the bedrock to use the variables.
	set {_x} to x-coordinate of {_bedrock}
	set {_y} to y-coordinate of {_bedrock}
	set {_z} to z-coordinate of {_bedrock}
	#
	# > Check, if the player who executed the command is also the leader of the island.
	if {SB::island::%{_x}%_%{_y}%_%{_z}%::leader} is {_uuid}:
		set {_slots} to 0
		loop 5 times:
			if size of {SB::config::defaultisflag::*} > {_slots}:
				add 9 to {_slots}
		
		opengui({_p},{_slots},"&lFlags")
		#
		# > Set {_i} to 0, to order the items in the menu right.
		set {_i} to 0
		loop {SB::config::defaultisflag::*}:

			#
			# If the custom flag is set, set it to a local variable, if not, take the default configuration.
			if {SB::island::%{_x}%_%{_y}%_%{_z}%::flag::%loop-index%} is set:
				set {_boolean} to {SB::island::%{_x}%_%{_y}%_%{_z}%::flag::%loop-index%}
			else:
				set {_boolean} to loop-value
			#
			# > Set a lore which is added to the menu item.
			if {SB::config::toggleflags} is true:
				set {_lore} to "%{SB::lang::flag::%loop-index%d::%{_lang}%}%\n%{SB::config::guispacer}%\n%{SB::lang::flag::currentsetting::%{_lang}%}%%{SB::lang::flag::current%{_boolean}%::%{_lang}%}%\n%{SB::config::guispacer}%\n%{SB::lang::flag::toggleflagstrue::%{_lang}%}%"
			else:
				set {_lore} to "%{SB::lang::flag::%loop-index%d::%{_lang}%}%\n%{SB::config::guispacer}%\n%{SB::lang::flag::currentsetting::%{_lang}%}%%{SB::lang::flag::current%{_boolean}%::%{_lang}%}%\n%{SB::config::guispacer}%\n%{SB::lang::flag::toggleflagsfalse::%{_lang}%}%"

			#
			# > Set either green glass panes or red glass panes for true and false and then set the item.
			# > The items have translation text as variable and also execute the "toggleflag" function onn click.
			if {_boolean} is true:
				setguiitem({_p},{_i},"green glass pane",1,"&r%{SB::lang::flag::%loop-index%t::%{_lang}%}%","&r%{_lore}%","toggleflag(""%{_p}%"" parsed as player,""%loop-index%"")",false)
			if {_boolean} is false:
				setguiitem({_p},{_i},"red glass pane",1,"&r%{SB::lang::flag::%loop-index%t::%{_lang}%}%","&r%{_lore}%","toggleflag(""%{_p}%"" parsed as player,""%loop-index%"")",false)
			#
			# > Add 1 to {_i} to place the items in the slots in the right order.
			add 1 to {_i}

	else:
		message "%{_prefix}% %{SB::lang::notleader::%{_lang}%}%" to {_p}

function toggleflag(p:player, flag:text):
	if {SB::config::toggleflags} is true:

		#
		# > Get the uuid of the player and set it to a local variable.
		set {_uuid} to uuid of {_p}
		#
		# > Get the bedrock of the player who executed the command.
		set {_bedrock} to {SB::player::%{_uuid}%::island::bedrock}
		#
		# > Get the x, y and z-coordinates of the bedrock to use the variables.
		set {_x} to x-coordinate of {_bedrock}
		set {_y} to y-coordinate of {_bedrock}
		set {_z} to z-coordinate of {_bedrock}

		#
		# > Get the current flag setting.
		set {_flagsetting} to {SB::island::%{_x}%_%{_y}%_%{_z}%::flag::%{_flag}%}
		
		#
		# > If the flag setting is not set, use the default setting.
		if {_flagsetting} is not set:
			set {_flagsetting} to {SB::config::defaultisflag::%{_flag}%}
		#
		# > Toggle the setting.
		if {_flagsetting} is true:
			set {SB::island::%{_x}%_%{_y}%_%{_z}%::flag::%{_flag}%} to false
		if {_flagsetting} is false:
			set {SB::island::%{_x}%_%{_y}%_%{_z}%::flag::%{_flag}%} to true
	#
	# > Reopen the flag menu.
	openflagmenu({_p})
