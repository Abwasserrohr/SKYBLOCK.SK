#
# ==============
# islandhelp.sk
# ==============
# islandhelp.sk is part of the SKYBLOCK.SK functions.
# ==============

import:
  org.bukkit.inventory.ItemStack
  org.bukkit.Material

#
# > Function - islandhelp:
# > Arguments:
# > <player>player, <text>site integer as text
# > Actions:
# > The islandhelp function sends the player the defined help site.
function islandhelp(p:player,site:text="1"):
  #
  # > Set frequently used variables.
  set {_site} to {_site} parsed as integer
  set {_lang} to getlangcode({_p})
  set {_prefix} to getlang("prefix",{_lang})
  #
  # > Set a new ComponentBuilder to create book pages.
  set {_book} to newComponentBuilder()
  #
  # > Add all commands and the order in which it should be displayed to the player.
  # > These need to have the same name as defined in the language files.
  add "iscreate","isdelete","isteleport","issethome","isteleportgo","islevel","istop","isinvite","iskick","isjoin" to {_commands::*}
  add "isleave","isgui","isspawn","isore","isgen","trustadd","trustremove","trustlist","helpwarp","helpsetwarp" to {_commands::*}
  add "helpdelwarp" to {_commands::*}
  set {_i} to 0
  loop {_commands::*}:
    #
	# > If this is a new page (counter is 0), add a header to the site.
    if {_i} is 0:
      {_book}.append(newTextComponent(getlang("help-header",{_lang},""," %nl%")))
      {_book}.append(newTextComponent("%{SB::config::bookspacer}%"))
    add 1 to {_i}
    #
    # > Get all the translations to add them into the page.
    set {_title} to getlang("help-title-%loop-value%",{_lang})
    set {_desc} to getlang("help-desc-%loop-value%",{_lang})
    set {_cmd} to getlang("help-cmd-%loop-value%",{_lang})
    set {_msg} to newTextComponent("%nl%%{_cmd}%")
    set {_msg} to sethovertextevent({_msg}, "%{_title}%\n%{_desc}%%nl%%{SB::config::guispacer}%&r%nl%%{_cmd}%%nl%%{SB::config::guispacer}%")
    {_book}.append({_msg})
    #
    # > Add a spacer which overwrites any events.
    set {_msg} to newTextComponent("%nl%%{SB::config::bookspacer}%")
    set {_msg} to overwritecomponentevents({_msg})
    {_book}.append({_msg})
    #
    # > Make a new site every 5 commands.
    if {_i} >= 5:
      add {_book}.create() to {_sites::*}
      set {_book} to newComponentBuilder()
      set {_i} to 0
  #
  # > Add the current page to the sites list.
  add {_book}.create() to {_sites::*}
  #
  # > Create a new book which is going to be used, create it as Bukkit ItemStack to prevent
  # > Skript side bugs.
  set {_item} to new ItemStack(Material.WRITTEN_BOOK!, 1)
  set {_bookmeta} to {_item}.getItemMeta()
  #
  # > Set the title and the author, this is not displayed but
  # > needed to function.
  {_bookmeta}.setTitle("Help")
  {_bookmeta}.setAuthor("Immanuel94")
  #
  # > Set the sites to the book and then open it to the player.
  {_bookmeta}.spigot().setPages({_sites::*})
  {_item}.setItemMeta({_bookmeta})
  #
  # > Get the item of the player to give it back after the book has been opened.
  set {_tool} to {_p}'s tool
  set {_p}'s tool to {_item}
  openbook({_p})
  set {_p}'s tool to {_tool}
