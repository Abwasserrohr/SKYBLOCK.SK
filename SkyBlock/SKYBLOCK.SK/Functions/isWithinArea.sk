#
# ==============
# isWithinArea.sk
# ==============
# isWithinArea.sk is part of the SKYBLOCK.SK functions.
# ==============

import:
  java.lang.Math

#
# > Function - isWithinArea
# > Parameters:
# > <location>the location which should be checked
# > <location>point a of the area
# > <location>point b of the area
# > Actions:
# > Returns if the first location is within a and b.
function isWithinArea(loc:location,a:location,b:location) :: boolean:
  #
  # > If the world doesn't match, return false.
  if {_loc}'s world is not {_a}'s world:
    return false
  if {_loc}'s world is not {_b}'s world:
    return false
  #
  # > Get the coordinates separate.
  set {_x} to x-coord of {_loc}
  set {_y} to y-coord of {_loc}
  set {_z} to z-coord of {_loc}
  #
  # > Calculate the min and max coordinates
  set {_x1} to Math.min(x-coord of {_a}, x-coord of {_b})
  set {_x2} to Math.max(x-coord of {_a}, x-coord of {_b})
  set {_y1} to Math.min(y-coord of {_a}, y-coord of {_b})
  set {_y2} to Math.max(y-coord of {_a}, y-coord of {_b})
  set {_z1} to Math.min(z-coord of {_a}, z-coord of {_b})

  #
  # > Add or remove 0.9 to prevent problems which
  # > are caused by x0.5 and z0.5 coordinates.
  if {_z1} < 0:
    set {_z1} to {_z1} - 0.9
  else:
    set {_z1} to {_z1} + 0.9
  set {_z2} to Math.max(z-coord of {_a}, z-coord of {_b})

  #
  # > Check if the location is within the area.
  if {_x1} < {_x}:
    if {_x2} > {_x}:
      if {_y1} < {_y}:
        if {_y2} > {_y}:
          if {_z1} < {_z}:
            if {_z2} > {_z}:
              return true
  return false
