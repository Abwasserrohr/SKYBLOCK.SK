#
# ==============
# biomechanger.sk v0.0.7
# ==============
# Adds biome changing capability to SKYBLOCK.SK
# ==============
# Dependencies
# ==============
# > Spigot 1.13.2 - https://hub.spigotmc.org/jenkins/job/BuildTools/
# > Skript by bensku - https://github.com/SkriptLang/Skript/releases
# > skript-mirror - https://github.com/btk5h/skript-mirror/releases
# ==============
# How to use it:
# ==============
# > Add biomechanger.sk to your "plugins/Skript/scripts" folder and then reload.
# > Use the changebiome(player,"biome") function to change the biome at the island
# > of the player to the defined biome. You can also alter the function to make it
# > work with custom locactions.
# > View all available biomes, look there: https://hub.spigotmc.org/javadocs/spigot/org/bukkit/block/Biome.html
# --------------
# > For tesing purposes: (Island has to be created first)
#command /testbiome:
#  trigger:
#    changebiome(player,"JUNGLE")
# ==============

#
# > Import Java class to get biome changing to work
import:
  org.bukkit.Bukkit
  org.bukkit.World
  org.bukkit.block.Biome

# > Function - changebiome:
# > Arguments:
# > <player>player, <text>biome
# > Actions:
# > changebiome is going to change the biome of the island the player is owning to the defined biome
function changebiome(player:offline player,biome:text,title:text):
  #
  # > Get the uuid of the player to then get the location of the island
  set {_uuid} to uuid of {_player}
  #
  # > Get the bedrock of player's island.
  set {_bedrock} to {SB::player::%{_uuid}%::island::bedrock}
  #
  # > Set {_b1} and {_b2} to the location of the island borders.
  set {_dist} to {SB::config::distance}
  set {_b1} to location of {_bedrock}
  set {_b2} to location of {_bedrock}
  add ({_dist} - {SB::config::protect}) to x-coord of {_b1}
  add ({_dist} - {SB::config::protect}) to z-coord of {_b1}
  subtract ({_dist} - {SB::config::protect}) from x-coord of {_b2}
  subtract ({_dist} - {SB::config::protect}) from z-coord of {_b2}
  #
  # > Since we only need to loop trough one y-coordinate per x- and z-axis, we set the y-coordinate to 0
  # > to prevent looping multiple times trough the same x- and z-axis.
  set y-coord of {_b1} to 0
  set y-coord of {_b2} to 0
  #
  # > Set {_world} to the defined world in the configuration
  set {_world} to Bukkit.getServer().getWorld("%{SB::config::world}%")
  replace all "_" with " " in {_biome}
  #
  # > Set {_changebiome} to the {_biome} parsed as biome, since the function accepts biomes as string (text)
  set {_changebiome} to {_biome} parsed as biome
  #
  # > Get the amount of blocks, which are going to be looped.
  set {_size} to {_dist}*{_dist}
  #
  # > Inform player about biome change
  set {_lang} to getlangcode({_player})
  set {_msg} to getlang("bc_changing",{_lang},getlang("prefix",{_lang},""," "))
  replace all "<biome>" with "%{_title}%" in {_msg}
  send {_msg} to {_player}
  #
  # > A progress bar to show how long it takes until it's done
  set {_needed} to 0
  set {_progress} to "%{SB::config::color::secondary::2}%||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||&r"
  #
  # > Get the minimum and maximum coordinate for each x-, y- and z-coord.
  set {_x1} to getmin(x-coord of block at {_b1}, x-coord of block at {_b2})
  set {_x2} to getmax(x-coord of block at {_b1}, x-coord of block at {_b2})
  set {_y1} to getmin(y-coord of block at {_b1}, y-coord of block at {_b2})
  set {_y2} to getmax(y-coord of block at {_b1}, y-coord of block at {_b2})
  set {_z1} to getmin(z-coord of block at {_b1}, z-coord of block at {_b2})
  set {_z2} to getmax(z-coord of block at {_b1}, z-coord of block at {_b2})
  #
  # > Loop through the island by going through every x- and z-coord and
  # > changing the biome of the coordinate.
  set {_x} to {_x1}
  while {_x} < {_x2}:
    add 1 to {_x}
    set {_z} to {_z1}
    while {_z} < {_z2}:
      add 1 to {_z}
      #set {_l1} to location at {_x}, 0, {_z} in "%{_b1}'s world%" parsed as world
      #set {_chunk} to chunk at block at {_l1}
      add 1 to {_i}
      if {_i} is 800:
        add 800 to {_b}
        wait 1 tick
        set {_p} to ({_b}/{_size})*100
        if {_p} >= {_needed}:
          add 1 to {_needed}
          replace all "%{SB::config::color::secondary::2}%|" with "%{SB::config::color::primary::1}%|%{SB::config::color::secondary::2}%" in {_progress}
          actionbar({_player},{_progress})
        set {_i} to 0
      #set {_x} to (location of loop-block).getBlockX()
      #set {_z} to (location of loop-block).getBlockZ()
      {_world}.setBiome({_x}, {_z}, {_changebiome})
  #
  # > Print to the player that we're done with changing the biome
  set {_msg} to getlang("bc_done",{_lang},getlang("prefix",{_lang},""," "))
  send {_msg} to {_player}
  #
  # > Renew the player's chunks by teleporting the player to the lobby and then back:
  set {_tloc} to {_player}'s location
  teleport {_player} to {SB::config::spawn}
  wait 2 ticks
  teleport {_player} to {_tloc}
