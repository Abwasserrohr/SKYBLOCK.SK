#
# ==============
# store.sk v0.0.6
# ==============
# Allow your players to buy and sell stuff easily.
# ==============
# Dependencies
# ==============
# > Spigot - https://hub.spigotmc.org/jenkins/job/BuildTools/
# > Skript by bensku - https://github.com/SkriptLang/Skript/releases
# > SKYBLOCK.SK - https://github.com/Abwasserrohr/SKYBLOCK.SK
# ==============
# How to use it:
# ==============
# > First use: Place store.sk into your "plugins/Skript/scripts/" folder and restart. Subfolders are possible too.
# > store.sk needs SKYBLOCK.SK language files and addons: gui.sk
# > Steps for users:
# > Open the store with /store or /shop.

options:
  #
  # > The item which should be display the click buy section.
  buyitem: emerald block
  #
  # > The item which should be display the click sell section.
  sellitem: redstone block
  
#
# > Configure the categories and items of the store below.
on load:
  #
  # > Sell money gain limit per player
  loadconfigobject("store-selllimit",20000)
  #
  # > Categories
  # > Example for a small configuration:
  # > add "<any internal category name>" to {_categories::*}
  # > loadconfigobject("store-config-category-item-<any internal category name>",any item or block)
  # > loadconfigarray("store-config-categories",{_categories::*})
  # > Category names are stored in the language file as:
  # > store_category_<any internal category name>
  delete {_categories::*}
  add "blocks" to {_categories::*}
  add "items" to {_categories::*}
  add "eggs" to {_categories::*}
  add "food" to {_categories::*}
  add "decoration" to {_categories::*}
  add "ores" to {_categories::*}
  add "colorblocks" to {_categories::*}
  loadconfigarray("store-config-categories",{_categories::*})
  loadconfigobject("store-config-category-item-blocks",grass)
  loadconfigobject("store-config-category-item-items",stick)
  loadconfigobject("store-config-category-item-eggs",villager spawn egg)
  loadconfigobject("store-config-category-item-food",cooked beef)
  loadconfigobject("store-config-category-item-decoration",poppy)
  loadconfigobject("store-config-category-item-ores",diamond)
  loadconfigobject("store-config-category-item-colorblocks",red terracotta)

  #
  # > Items for the categories
  # > Example of a small configuration:
  # > add 64 of cobblestone to {_categoryitems::*}
  # > add "50" to {_categorybuy::*}
  # > add "5" to {_categorysell::*}
  # > add "0" to {_categorylvlthreshold::*}
  # > loadconfigarray("store-config-items-<any internal category name>",{_categoryitems::*})
  # > loadconfigarray("store-config-items-<any internal category name>-buy",{_categorybuy::*})
  # > loadconfigarray("store-config-items-<any internal category name>-sell",{_categorysell::*})
  # > loadconfigarray("store-config-items-<any internal category name>-lvl",{_categorylvlthreshold::*})
  # > delete {_categoryitems::*}
  # > delete {_categorybuy::*}
  # > delete {_categorysell::*}
  # > delete {_categorylvlthreshold::*}

  add 64 of cobblestone to {_categoryitems::*}
  add "50" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 1 of dirt to {_categoryitems::*}
  add "1000" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 1 of sand to {_categoryitems::*}
  add "1000" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 64 of stone to {_categoryitems::*}
  add "75" to {_categorybuy::*}
  add "7.5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 1 of obsidian to {_categoryitems::*}
  add "10000" to {_categorybuy::*}
  add "1000" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 32 of oak log to {_categoryitems::*}
  add "100" to {_categorybuy::*}
  add "30" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 32 of raw diorite to {_categoryitems::*}
  add "30" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 32 of raw andesite to {_categoryitems::*}
  add "30" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 32 of raw granite to {_categoryitems::*}
  add "30" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 16 of gravel to {_categoryitems::*}
  add "100" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 1 of purpur block to {_categoryitems::*}
  add "20" to {_categorybuy::*}
  add "0.5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 16 of white wool to {_categoryitems::*}
  add "100" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  
  add 32 of netherrack to {_categoryitems::*}
  add "40" to {_categorybuy::*}
  add "15" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  
  add 1 of clay block to {_categoryitems::*}
  add "20" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  

  loadconfigarray("store-config-items-blocks",{_categoryitems::*})
  loadconfigarray("store-config-items-blocks-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-blocks-sell",{_categorysell::*})
  loadconfigarray("store-config-items-blocks-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}
  
  #
  # > Mob spawn egg category
  add 1 of villager spawn egg to {_categoryitems::*}
  add "150000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of pig spawn egg to {_categoryitems::*}
  add "5000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of cow spawn egg to {_categoryitems::*}
  add "5000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of chicken spawn egg to {_categoryitems::*}
  add "2000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of wolf spawn egg to {_categoryitems::*}
  add "25000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of sheep spawn egg to {_categoryitems::*}
  add "50000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of mooshroom spawn egg to {_categoryitems::*}
  add "150000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of donkey spawn egg to {_categoryitems::*}
  add "30000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of llama spawn egg to {_categoryitems::*}
  add "25000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}

  add 1 of rabbit spawn egg to {_categoryitems::*}
  add "5000" to {_categorybuy::*}
  add "-1" to {_categorysell::*}
  add "90" to {_categorylvlthreshold::*}
  
  loadconfigarray("store-config-items-eggs",{_categoryitems::*})
  loadconfigarray("store-config-items-eggs-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-eggs-sell",{_categorysell::*})
  loadconfigarray("store-config-items-eggs-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}

  #
  # > Food category
  add 16 of steak to {_categoryitems::*}
  add "150" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cooked porkchop to {_categoryitems::*}
  add "150" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cooked chicken to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cooked rabbit to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cooked mutton to {_categoryitems::*}
  add "150" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of baked potato to {_categoryitems::*}
  add "150" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cooked cod to {_categoryitems::*}
  add "140" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cooked salmon to {_categoryitems::*}
  add "140" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of pumpkin pie to {_categoryitems::*}
  add "250" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of rabbit stew to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add 1 of cake to {_categoryitems::*}
  add "0" to {_categorylvlthreshold::*}

  add "75" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 32 of cookie to {_categoryitems::*}
  add "50" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of carrot to {_categoryitems::*}
  add "50" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 64 of sugar cane to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of bread to {_categoryitems::*}
  add "95" to {_categorybuy::*}
  add "4" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  loadconfigarray("store-config-items-food",{_categoryitems::*})
  loadconfigarray("store-config-items-food-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-food-sell",{_categorysell::*})
  loadconfigarray("store-config-items-food-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}

  #
  # > Decoration
  add 1 of dandelion to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of poppy to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of blue orchid to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of allium to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of azure bluet to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of oxeye daisy to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of red tulip to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of orange tulip to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of white tulip to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of pink tulip to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of fern to {_categoryitems::*}
  add "75" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of dead bush to {_categoryitems::*}
  add "75" to {_categorybuy::*}
  add "1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of vine to {_categoryitems::*}
  add "15" to {_categorybuy::*}
  add "0.1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of lily pad to {_categoryitems::*}
  add "50" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of chorus flower to {_categoryitems::*}
  add "45" to {_categorybuy::*}
  add "1.5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  loadconfigarray("store-config-items-decoration",{_categoryitems::*})
  loadconfigarray("store-config-items-decoration-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-decoration-sell",{_categorysell::*})
  loadconfigarray("store-config-items-decoration-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}

  #
  # > Items
  add 32 of torch to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of armor stand to {_categoryitems::*}
  add "15" to {_categorybuy::*}
  add "0.1" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of name tag to {_categoryitems::*}
  add "55" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  loadconfigarray("store-config-items-items",{_categoryitems::*})
  loadconfigarray("store-config-items-items-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-items-sell",{_categorysell::*})
  loadconfigarray("store-config-items-items-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}

  #
  # > Ores
  add 1 of iron ingot to {_categoryitems::*}
  add "35" to {_categorybuy::*}
  add "3" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}
  
  add 1 of gold ingot to {_categoryitems::*}
  add "35" to {_categorybuy::*}
  add "3" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of lapis lazuli to {_categoryitems::*}
  add "125" to {_categorybuy::*}
  add "5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of coal to {_categoryitems::*}
  add "25" to {_categorybuy::*}
  add "2.5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of diamond to {_categoryitems::*}
  add "175" to {_categorybuy::*}
  add "20" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of redstone to {_categoryitems::*}
  add "90" to {_categorybuy::*}
  add "4" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of emerald to {_categoryitems::*}
  add "45" to {_categorybuy::*}
  add "0.5" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 1 of nether quartz to {_categoryitems::*}
  add "40" to {_categorybuy::*}
  add "2" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  loadconfigarray("store-config-items-ores",{_categoryitems::*})
  loadconfigarray("store-config-items-ores-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-ores-sell",{_categorysell::*})
  loadconfigarray("store-config-items-ores-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}

  #
  # > Colorful blocks
  
  add 16 of white terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of orange terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of magenta terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of light blue terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of yellow terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of lime terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of pink terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of gray terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of light gray terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of cyan terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of purple terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of blue terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of brown terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of green terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of red terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of black terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  add 16 of terracotta to {_categoryitems::*}
  add "120" to {_categorybuy::*}
  add "10" to {_categorysell::*}
  add "0" to {_categorylvlthreshold::*}

  loadconfigarray("store-config-items-colorblocks",{_categoryitems::*})
  loadconfigarray("store-config-items-colorblocks-buy",{_categorybuy::*})
  loadconfigarray("store-config-items-colorblocks-sell",{_categorysell::*})
  loadconfigarray("store-config-items-colorblocks-lvl",{_categorylvlthreshold::*})
  delete {_categoryitems::*}
  delete {_categorybuy::*}
  delete {_categorysell::*}
  delete {_categorylvlthreshold::*}

#
# > Command - /store | /shop
# > Actions:
# > Calls the serverstore_open function with the player as parameter.
command /store:
  aliases: /shop
  trigger:
    serverstore_open(player)

#
# > Function - serverstore_open
# > Parameters:
# > <player>the player who wants to open the store
# > <text>the mode, either "buy" or "sell". Default: "none"
# > <text>the category, currently only used to know if the player has to select the mode or notenoughitem
# > <number>the categorysite is used if there are more categories than they would fit on one site, open site 2 to display the 2nd site. Default: 1.
# > <text>the shop which should be opened. This is a predefined category. Eg. "food". Default: "none".
# > <number>if there are more items than they're fitting on one page, more pages are used to display them. Default 1.
# > Actions:
# > Opens a store menu which allows to buy and sell all predefined items of the categories.
# > The process can render unlimited amounts of categories and items thanks to the multi site system, which
# > automatically increases the sites, if more are needed.
function serverstore_open(player:player,mode:text="none",category:text="selectmode",categorysite:number=1,shop:text="none",shopsite:number=1):
  #
  # > Get the uuid and the language code of the player.
  set {_uuid} to uuid of {_player}
  set {_lang} to {SK::lang::%{_uuid}%}
  #
  # > Get the current island level of the island the player is on.
  set {_bedrock} to {SB::player::%{_uuid}%::island::bedrock}
  set {_bedrockloc} to "%x-coord of {_bedrock}%_%y-coord of {_bedrock}%_%z-coord of {_bedrock}%"
  set {_level} to {SB::island::%{_bedrockloc}%::level}
  set {_currency} to getlang("currencyname",{_lang})
  #
  # > Set the head data of the forward and backwards skins to make site scrolling possible.
  set {_forwardpageheaddata} to "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvZDllY2NjNWMxYzc5YWE3ODI2YTE1YTdmNWYxMmZiNDAzMjgxNTdjNTI0MjE2NGJhMmFlZjQ3ZTVkZTlhNWNmYyJ9fX0="
  set {_backwardpageheaddata} to "eyJ0ZXh0dXJlcyI6eyJTS0lOIjp7InVybCI6Imh0dHA6Ly90ZXh0dXJlcy5taW5lY3JhZnQubmV0L3RleHR1cmUvODY0Zjc3OWE4ZTNmZmEyMzExNDNmYTY5Yjk2YjE0ZWUzNWMxNmQ2NjllMTljNzVmZDFhN2RhNGJmMzA2YyJ9fX0="
  #
  # > Open the store menu.
  opengui({_player},54,getlang("store_guititle",{_lang}),chest inventory)
  #
  # > Give the menu some background items.
  loop 54 times:
    setguiitem({_player},loop-number - 1,black stained glass pane,1," "," ","",false)
  #
  # > If there is no specific buy or sell mode selected, show the selectmode menu.
  if {_category} is "selectmode":
    #
    # > These items allow the player to select either the buy or sell mode.
    setguiitem({_player},21,{@buyitem},1,getlang("store_buymodeitem",{_lang}),getlang("store_buymodeitemlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""buy"",""main"")",false)
    setguiitem({_player},23,{@sellitem},1,getlang("store_sellmodeitem",{_lang}),getlang("store_sellmodeitemlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""sell"",""main"")",false)
    #
    # > Add back item to allow the player to go back to the previous menu.
    setguiitem({_player},53,{SB::config::backguiitem},1,getlang("guibacktopreviousmenu",{_lang}),getlang("guibacktopreviousmenulore",{_lang}),"make ""%{_player}%"" parsed as player execute command ""/is""",false)
    stop
  else:
    #
    # > Depending on the current mode, set a toggle mode item into slot 8 of the menu.
    if {_mode} is "sell":
      setguiitem({_player},8,{@sellitem},1,getlang("store_sellmodeitem",{_lang}),getlang("store_sellmodeitemlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""buy"",""%{_category}%"",%{_categorysite}%,""%{_shop}%"",%{_shopsite}%)",false)
    else if {_mode} is "buy":
      setguiitem({_player},8,{@buyitem},1,getlang("store_buymodeitem",{_lang}),getlang("store_buymodeitemlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""sell"",""%{_category}%"",%{_categorysite}%,""%{_shop}%"",%{_shopsite}%)",false)

  #
  # > Set the slot where the store is starting from.
  set {_storeslot} to 9
  #
  # > Set the start shop id of the current shop site.
  # > Every shop site has 21 entries.
  set {_startshopid} to ({_shopsite}*21)-21
  if {_shop} is not "none":
    #
    # > If the shop site isn't 1, add a backwards button to get back to the first site.
    if {_shopsite} is not 1:
      set {_item} to getcustomhead("blackbackwards",{_backwardpageheaddata})
      setguiitem({_player},18,{_item},1,getlang("store_pagebackward",{_lang}),getlang("store_pagebackwardlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_category}%"",%{_categorysite}%,""%{_shop}%"",%{_shopsite}-1%)",false)
    #
    # > Load necessary data from metadata.
    set {_items::*} to getconfigarray("store-config-items-%{_shop}%")
    set {_buyprice::*} to getconfigarray("store-config-items-%{_shop}%-buy")
    set {_sellprice::*} to getconfigarray("store-config-items-%{_shop}%-sell")
    set {_lvlthreshold::*} to getconfigarray("store-config-items-%{_shop}%-lvl")
    #
    # > Loop through all items for the selected shop.
    loop {_items::*}:
      #
      # > Count the loops to know which items should be displayed, important if
      # > there are more pages than only one.
      add 1 to {_loopnum}
      #
      # > If the loop id is equal or bigger than the startshop id.
      # > This startshopid changes if there are more pages. Eg. site 2 = 21.
      if {_loopnum} >= {_startshopid}:
        #
        # > If the loop number isn't equal or bigger than the shopsite+21.
        if {_loopnum} <= ({_shopsite}+21):
          #
          # > The store menu should be filled, add 1 to the slot, also
          # > increase tthe skipslot variable by one to skip every 8 slots
          # > for a more beautiful menu.
          add 1 to {_storeslot}
          add 1 to {_skipslot}
          #
          # > If the skipslot variable is 8, reset it to 1 and add 2 extra
          # > slots to the store slot.
          if {_skipslot} is 8:
            set {_skipslot} to 1
            add 2 to {_storeslot}
          #
          # > Get the amount of the looped ItemStack to display it correctly on the menu.
          set {_number} to "%loop-value.getAmount()%" parsed as number
          #
          # > Depending if the mode is "sell" or "buy", use different variables for translation
          # > of the menu to fit better.
          if {_mode} is "sell":
            set {_lore} to getlang("store_itemselllore",{_lang})
            set {_price} to {_sellprice::%{_loopnum}%}
            replace all "<amount>" with "%{_price}%" in {_lore}
            replace all "<currency>" with "&7%{_currency}%" in {_lore}
            if {_price} is "-1":
              set {_lore} to getlang("store_cantsell",{_lang})
          else if {_mode} is "buy":
            set {_lore} to getlang("store_itembuylore",{_lang})
            set {_price} to {_buyprice::%{_loopnum}%}
            replace all "<amount>" with "%{_price}%" in {_lore}
            replace all "<currency>" with "&7%{_currency}%" in {_lore}
            if {_price} is "-1":
              set {_lore} to getlang("store_cantbuy",{_lang})
          #
          # > If the players island is equal or higher to the threshold, display the item with
          # > prepared lore.
          if {_lvlthreshold::%{_loopnum}%} parsed as number <= {_level}:
            #
            # > Once all the data to display has been prepared, place the item
            # > into the current menu of the player.
            setguiitem({_player},{_storeslot},loop-value,{_number},"","%{_lore}%","storeshophandler(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_shop}%"",%{_loopnum}%)||storeshophandler(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_shop}%"",%{_loopnum}%,true)",false)
          #
          # > If the threshold has not been reached, set a not clickable item into the store
          # > with a lore which describes why.
          else:
            set {_lore} to getlang("store_lvlthreshold",{_lang})
            replace all "<level>" with "%{_lvlthreshold::%{_loopnum}%}%" in {_lore}
            setguiitem({_player},{_storeslot},loop-value,{_number},"","%{_lore}%"," ",false)
          #
          # > The 34th slot gets a forward button which allows the player
          # > to get to the next page, if there are enough items within this loop.
          # > This only happens if there are actually enough items in the list.
          if {_storeslot} is 34:
            set {_item} to getcustomhead("blackforward",{_forwardpageheaddata})
            setguiitem({_player},26,{_item},1,getlang("store_pageforward",{_lang}),getlang("store_pageforwardlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_category}%"",%{_categorysite}%,""%{_shop}%"",%{_shopsite}+1%)",false)
            stop loop
  #
  # > Get the current start it of the category site. There might be more sites of categories,
  # > if the server operator decided to create more than 6 categories. Thanks to this, there
  # > are no limits for categories.
  set {_startcategoryid} to ({_categorysite}*7)-7
  set {_loopnum} to 0
  #
  # > Set the slot where the category slots are starting.
  # > This is predefined and should not be changed.
  set {_slot} to 45
  #
  # > Load the categories from metadata.
  set {_categories::*} to getconfigarray("store-config-categories")
  #
  # > Loop through all categories to display the right ones.
  loop {_categories::*}:
    #
    # > Count the loops to display the right categories.
    add 1 to {_loopnum}
    #
    # > Go forward if the loop number is equal or bigger than the start category id.
    if {_loopnum} >= {_startcategoryid}:
      #
      # > If the slot is 45, this means that this is the first slot.
      # > Check if the category site is not 1, if it is not 1, a "back" item is necessary
      # > to be used here, to allow the player to navigate back.
      if {_slot} is 45:
        if {_categorysite} is not 1:
          set {_item} to getcustomhead("blackbackwards",{_backwardpageheaddata})
          setguiitem({_player},{_slot},{_item},1,getlang("store_pagebackward",{_lang}),getlang("store_pagebackwardlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_category}%"",%{_categorysite}-1%,""%{_shop}%"",%{_shopsite}%)",false)
          add 1 to {_slot}
        else:
          add 1 to {_slot}
      #
      # > If the loop number is equal or smaller than the startcategory id + 6, set the category with
      # > the predefined category item.
      if {_loopnum} <= ({_startcategoryid}+6):
        set {_item} to getconfigobject("store-config-category-item-%loop-value%")
        setguiitem({_player},{_slot},{_item},1,getlang("store_category_%loop-value%",{_lang}),"","serverstore_open(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_category}%"",%{_categorysite}%,""%loop-value%"",1)",false)
        add 1 to {_slot}
      #
      # > If the loop number is exactly startcategory id + 7, we have hit the
      # > last spot which can be used for a "go forward to the next site" item,
      # > which is going to be used here if the slot is 52.
      if {_loopnum} is ({_startcategoryid}+7):
        if {_slot} is 52:
          set {_item} to getcustomhead("blackforward",{_forwardpageheaddata})
          setguiitem({_player},{_slot},{_item},1,getlang("store_pageforward",{_lang}),getlang("store_pageforwardlore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player,""%{_mode}%"",""%{_category}%"",%{_categorysite}+1%,""%{_shop}%"",%{_shopsite}%)",false)
  #
  # > Set a go back to the previous menu item.
  setguiitem({_player},53,{SB::config::backguiitem},1,getlang("guibacktopreviousmenu",{_lang}),getlang("guibacktopreviousmenulore",{_lang}),"serverstore_open(""%{_player}%"" parsed as player)",false)

#
# > Function - storeshophandler
# > Parameters:
# > <player>the player who wants to buy|sell
# > <text>the action, either "buy" or "sell"
# > <text>the shop name (internal), eg. "food"
# > <number>the item id of the shop.
# > <boolean>does the player want to buy|sell mass? Default = false (doesn't want mass buy|sell)
# > Actions:
# > Buys or sells items for the player. Checks balance of the player, inventory and only
# > proceeds, if the player has the money, items and/or space for the items.
function storeshophandler(player:player,action:text,shop:text,itemshopid:number,mass:boolean=false):
  #
  # > Get frequently used variable data as local variable.
  set {_uuid} to uuid of {_player}
  set {_lang} to {SK::lang::%{_uuid}%}
  set {_prefix} to getlang("prefix",{_lang})
  set {_currency} to getlang("currencyname",{_lang})
  #
  # > Load necessary data from metadata.
  set {_items::*} to getconfigarray("store-config-items-%{_shop}%")
  #
  # > Get the price of the item and parse it as number.
  if {_action} is "buy":
    set {_buyprice::*} to getconfigarray("store-config-items-%{_shop}%-buy")
  else if {_action} is "sell":
    set {_sellprice::*} to getconfigarray("store-config-items-%{_shop}%-sell")
  set {_price} to {_%{_action}%price::%{_itemshopid}%} parsed as number
  #
  # > If the price is -1, stop here.
  if {_price} is -1:
    stop
  #
  # > Get the item which should be bought|sold as a local variable.
  set {_item} to {_items::%{_itemshopid}%}
  #
  # > Go through the following part if the player wants to buy.
  if {_action} is "buy":
    #
    # > If the player has enough money, go forward.
    if {_player}'s balance >= {_price}:
      #
      # > Only go forward if the player has enough space in his inventory.
      if {_player}'s inventory has enough space for {_item}:
        #
        # > Remove the money from the player, send a success message and
        # > give the player the item.
        remove {_price} from {_player}'s balance
        #
        # > Create new Text Components to send them to the player. Also sends an
        # > TranslatableComponent, which is going to be translated by the client.
        set {_langmsg::*} to getlang("store_boughtxitems",{_lang}) split at "<ph>"
        set {_msg} to newTextComponent("%{_prefix}% %{_langmsg::1}%%{_item}.getAmount()% %{_langmsg::2}%")
        {_msg}.addExtra(getTranslatableComponentFromItem({_item}))
        {_msg}.addExtra(newTextComponent("%{_langmsg::3}%%{_price}% %{_currency}%%{_langmsg::4}%"))
        {_player}.sendMessage({_msg})
        give {_item} to {_player}'s inventory
      #
      # > The player has not enough space, send a error message.
      else:
        set {_msg} to getlang("storage_notenoughinvspace",{_lang})
        message "%{_prefix}% %{_msg}%" to {_player}
    #
    # > The player doesn't have enough money, send a error message.
    else:
      set {_msg} to getlang("bc_notenoughmoney",{_lang})
      message "%{_prefix}% %{_msg}%" to {_player}
      stop
  #
  # > If the player wants to sell, go through this part.
  else if {_action} is "sell":
    #
    # > If the player tries to sell more than allowed, stop and send a message.
    if metadata value "store-sells-serversession" of {_player} >= getconfigobject("store-selllimit"):
      set {_msg} to getlang("store_maxsellamountreached",{_lang})
      replace all "<currency>" with "%{_currency}%" in {_msg}
      replace all "<amount>" with "%getconfigobject(""store-selllimit"")%" in {_msg}
      message "%{_prefix}% %{_msg}%" to {_player}
      stop
    #
    # > If the player wants to sell in mass, go through this below.
    if {_mass} is true:
      #
      # > Check if the player has 1 of the item, if yes that's true,
      # > sell all of the item and calculate the correct price.
      if {_player}'s inventory has 1 of {_item}:
        #
        # > Get the amount of the current ItemStack.
        set {_number} to "%{_item}.getAmount()%" parsed as number
        #
        # > Divide the pricce with the amount of the ItemStack, that way, we get
        # > the price of 1 piece.
        set {_price} to {_price} / {_number}
        #
        # > Multiply the price for one piece with all pieces of the item the player
        # > has in his inventory.
        set {_price} to {_price} * number of {_item} in {_player}'s inventory
        #
        # > Create new Text Components to send them to the player. Also sends an
        # > TranslatableComponent, which is going to be translated by the client.
        set {_langmsg::*} to getlang("store_soldxitems",{_lang}) split at "<ph>"
        set {_msg} to newTextComponent("%{_prefix}% %{_langmsg::1}%%number of {_item} in {_player}'s inventory% %{_langmsg::2}%")
        {_msg}.addExtra(getTranslatableComponentFromItem({_item}))
        {_msg}.addExtra(newTextComponent("%{_langmsg::3}%%{_price}% %{_currency}%%{_langmsg::4}%"))
        {_player}.sendMessage({_msg})
        #
        # > Remove all the defined items and give the player the calculated money. Then stop.
        remove number of {_item} in {_player}'s inventory of {_item} from {_player}'s inventory 
        add {_price} to {_player}'s balance
        #
        # > Add the money to a temporary metadata storage to limit sells per player.
        set metadata value "store-sells-serversession" of {_player} to (metadata value "store-sells-serversession" of {_player}) + {_price}
        stop
    #
    # > If the player doesn't want to sell in masses, check if the player has the item
    # > amount in his inventory.
    else if {_player}'s inventory has {_item}:
      #
      # > Create new Text Components to send them to the player. Also sends an
      # > TranslatableComponent, which is going to be translated by the client.
      set {_langmsg::*} to getlang("store_soldxitems",{_lang}) split at "<ph>"
      set {_msg} to newTextComponent("%{_prefix}% %{_langmsg::1}%%{_item}.getAmount()% %{_langmsg::2}%")
      {_msg}.addExtra(getTranslatableComponentFromItem({_item}))
      {_msg}.addExtra(newTextComponent("%{_langmsg::3}%%{_price}% %{_currency}%%{_langmsg::4}%"))
      {_player}.sendMessage({_msg})
      #
      # > Remove the item from the inventory of the player and give the money.
      remove {_item} from {_player}'s inventory
      add {_price} to {_player}'s balance
      #
      # > Add the money to a temporary metadata storage to limit sells per player.
      set metadata value "store-sells-serversession" of {_player} to (metadata value "store-sells-serversession" of {_player}) + {_price}
      stop
    #
    # > The player doesn't have enough items. Send a error message.
    else:
      #
      # > Create new Text Components to send them to the player. Also sends an
      # > TranslatableComponent, which is going to be translated by the client.
      set {_langmsg::*} to getlang("store_notenoughitem",{_lang}) split at "<ph>"
      set {_msg} to newTextComponent("%{_prefix}% %{_langmsg::1}%")
      {_msg}.addExtra(getTranslatableComponentFromItem({_item}))
      {_msg}.addExtra(newTextComponent("%{_langmsg::2}%"))
      {_player}.sendMessage({_msg})
